{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Students\\\\my-portfolio\\\\src\\\\Components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport Nav from 'react-bootstrap/Nav';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  //function for 'home' button only\n  const [isClicked, setIsClicked] = useState(false);\n\n  //function for 'About' button only\n  const [isOnAboutPage, setIsOnAboutPage] = useState(false);\n\n  //function for 'contact' button only\n  const [isOnContactPage, setIsOnContactPage] = useState(false);\n\n  //function for 'myProjects'\n  const [isOnProjects, setIsOnProjects] = useState(false);\n\n  //Allows the server to read what page is active\n  const location = useLocation();\n\n  // || location.pathname === \"/projects\" || location.pathname === \"/about\" || location.pathname === \"/contact\"\n  useEffect(() => {\n    setIsClicked(location.pathname === '/home');\n    setIsOnAboutPage(location.pathname === '/about');\n    setIsOnContactPage(location.pathname === '/contact');\n    setIsOnProjects(location.pathname === '/projects');\n  }, [location.pathname]);\n  if (isClicked === true && location.pathname === isClicked) {\n    setIsOnAboutPage(false);\n    setIsOnContactPage(false);\n    setIsOnProjects(false);\n  }\n  if (isOnAboutPage === true && location.pathname === isOnAboutPage) {\n    setIsClicked(false);\n    setIsOnContactPage(false);\n    setIsOnProjects(false);\n  }\n  if (isOnContactPage === true && location.pathname === isOnContactPage) {\n    setIsClicked(false);\n    setIsOnAboutPage(false);\n    setIsOnProjects(false);\n  }\n  if (isOnProjects === true && location.pathname === isOnProjects) {\n    isClicked(true);\n    setIsOnAboutPage(false);\n    setIsOnContactPage(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [false].map(expand => /*#__PURE__*/_jsxDEV(Navbar, {\n      expand: expand,\n      className: \"transparent-nav\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          className: \"Logo-txt\",\n          style: {\n            textTransform: 'uppercase'\n          },\n          children: \"Brandon's Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": `offcanvasNavbar-expand-${expand}`,\n          className: \"navBlock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Offcanvas, {\n          id: `offcanvasNavbar-expand-${expand}`,\n          \"aria-labelledby\": `offcanvasNavbarLabel-expand-${expand}`,\n          placement: \"end\",\n          className: \"offCanvas-expand\",\n          children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n            closeButton: true,\n            className: \"Offcanvas-header\",\n            children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n              id: `offcanvasNavbarLabel-expand-${expand}`,\n              children: /*#__PURE__*/_jsxDEV(Navbar.Text, {\n                style: {\n                  textTransform: \"uppercase\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nav-head-txt\",\n                  children: \"More about me\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n            className: \"Off-canvas-body\",\n            children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n              to: \"/\",\n              as: Link,\n              className: \"navLink\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              to: \"/about\",\n              as: Link,\n              className: \"navLink\",\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              to: \"/projects\",\n              as: Link,\n              className: \"navLink\",\n              children: \"My Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n          className: \"Off-canvas-body-nav\",\n          children: [isClicked === false ? /*#__PURE__*/_jsxDEV(Nav.Link, {\n            to: \"/\",\n            as: Link,\n            onClick: () => setIsClicked(true),\n            className: \"nav-link1\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(Nav.Link, {\n            to: \"/\",\n            as: Link,\n            onClick: () => setIsClicked(true),\n            className: \"nav-link\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), isOnAboutPage === false ? /*#__PURE__*/_jsxDEV(Nav.Link, {\n            to: \"/about\",\n            as: Link,\n            onClick: () => setIsOnAboutPage(true),\n            className: \"nav-link2\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(Nav.Link, {\n            to: \"/about\",\n            as: Link,\n            onClick: () => isOnAboutPage(true),\n            className: \"nav-link\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), isOnContactPage === false ? /*#__PURE__*/_jsxDEV(Nav.Link, {\n            to: \"/contact\",\n            as: Link,\n            onClick: () => isOnContactPage(true),\n            className: \"nav-link3\",\n            children: \"Contact Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(Nav.Link, {\n            to: \"/contact\",\n            as: Link,\n            onClick: () => setIsOnContactPage(true),\n            className: \"nav-link\",\n            children: \"Contact Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, expand, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(Header, \"lelivbAsxnbCU4DPSlj6EsaW390=\", false, function () {\n  return [useLocation];\n});\n_c = Header;\nexport default Header;\n\n// import { Link } from 'react-router-dom';\n// import Container from 'react-bootstrap/Container';\n// import Navbar from 'react-bootstrap/Navbar';\n// import Offcanvas from 'react-bootstrap/Offcanvas';\n// import Nav from 'react-bootstrap/Nav';\n// import { useState, useEffect } from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const Header = () => {\n//   //function for 'home' button only\n//   // const [isClicked, setIsClicked] = useState(false);\n\n//   // //function for 'About' button only\n//   // const [isOnAboutPage, setIsOnAboutPage] = useState(false);\n\n//   // //function for 'contact' button only\n//   // const [isOnContactPage, setIsOnContactPage] = useState(false);\n\n//   // //function for 'myProjects'\n//   // const [isOnProjects, setIsOnProjects] = useState(false);\n\n//   // //Allows the server to read what page is active\n//   // const location = useLocation();\n\n// // || location.pathname === \"/projects\" || location.pathname === \"/about\" || location.pathname === \"/contact\"\n//   // useEffect(() => {\n//   //   setIsClicked(location.pathname === '/home');\n//   //   setIsOnAboutPage(location.pathname === '/about');\n//   //   setIsOnContactPage(location.pathname === '/contact');\n//   //   setIsOnProjects(location.pathname === '/projects');\n//   // }, [location.pathname]);\n\n//   // if(isClicked === true && location.pathname === isClicked){\n//   //   setIsOnAboutPage(false);\n//   //   setIsOnContactPage(false);\n//   //   setIsOnProjects(false);\n//   // }\n\n//   // if(isOnAboutPage === true && location.pathname === isOnAboutPage){\n//   //   setIsClicked(false);\n//   //   setIsOnContactPage(false);\n//   //   setIsOnProjects(false);\n//   // }\n\n//   // if(isOnContactPage === true && location.pathname === isOnContactPage){\n//   //   setIsClicked(false);\n//   //   setIsOnAboutPage(false);\n//   //   setIsOnProjects(false);\n//   // }\n\n//   // if (isOnProjects === true && location.pathname === isOnProjects){\n//   //   isClicked(true);\n//   //   setIsOnAboutPage(false);\n//   //   setIsOnContactPage(false);\n//   // }\n\n//   const location = useLocation();\n\n//   const [isClicked, setIsClicked] = useState(false);\n//   const [isOnAboutPage, setIsOnAboutPage] = useState(location.pathname === '/about');\n//   const [isOnContactPage, setIsOnContactPage] = useState(location.pathname === '/contact');\n//   const [isOnProjects, setIsOnProjects] = useState(location.pathname === '/projects');\n\n//   const handleHomeClick = () => {\n//     setIsClicked(true);\n//     setIsOnAboutPage(false);\n//     setIsOnContactPage(false);\n//     setIsOnProjects(false);\n//   };\n\n//   const handleAboutClick = () => {\n//     setIsOnAboutPage(true);\n//     setIsClicked(false);\n//     setIsOnContactPage(false);\n//     setIsOnProjects(false);\n//   };\n\n//   const handleContactClick = () => {\n//     setIsOnContactPage(true);\n//     setIsClicked(false);\n//     setIsOnAboutPage(false);\n//     setIsOnProjects(false);\n//   };\n\n//   const handleProjectsClick = () => {\n//     setIsOnProjects(true);\n//     setIsClicked(false);\n//     setIsOnAboutPage(false);\n//     setIsOnContactPage(false);\n//   };\n\n//   useEffect(() => {\n//     setIsClicked(location.pathname === '/home');\n//     setIsOnAboutPage(location.pathname === '/about');\n//     setIsOnContactPage(location.pathname === '/contact');\n//     setIsOnProjects(location.pathname === '/projects');\n//   }, [location.pathname]);\n\n//   return (\n//     <>\n\n//      {[false].map((expand) => (\n//         <Navbar key={expand} expand={expand} className=\"transparent-nav\">\n\n//           <Container fluid>\n\n//             <Navbar.Brand className=\"Logo-txt\" style={{textTransform:'uppercase'}}>Brandon's Portfolio</Navbar.Brand>\n\n//             <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-${expand}`} className=\"navBlock\" />\n\n//             <Navbar.Offcanvas\n//               id={`offcanvasNavbar-expand-${expand}`}\n//               aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`}\n//               placement=\"end\"\n//               className=\"offCanvas-expand\"\n//             >\n\n//               <Offcanvas.Header closeButton className=\"Offcanvas-header\">\n\n//                 <Offcanvas.Title id={`offcanvasNavbarLabel-expand-${expand}`}>\n\n//                   <Navbar.Text style={{textTransform:\"uppercase\"}}>\n\n//                     <div className=\"nav-head-txt\">\n//                       More about me\n//                     </div>\n\n//                     </Navbar.Text>\n\n//                 </Offcanvas.Title>\n\n//               </Offcanvas.Header>\n\n//               <Offcanvas.Body className=\"Off-canvas-body\">\n//               <Nav.Link to=\"/\" as={Link} className=\"navLink\">Home</Nav.Link>\n//               <Nav.Link to=\"/about\" as={Link} className=\"navLink\" >About</Nav.Link>\n//               <Nav.Link to=\"/projects\" as={Link} className=\"navLink\">My Projects</Nav.Link>\n//               </Offcanvas.Body>\n\n//             </Navbar.Offcanvas>\n\n//               <Offcanvas.Body className=\"Off-canvas-body-nav\">\n\n//               {isClicked === false ? ( <Nav.Link to=\"/\" as={Link} onClick={setIsClicked(true)} onChange={handleHomeClick} className=\"navLink1\">Home</Nav.Link>) : (\n//                 <Nav.Link to=\"/\" as={Link} onClick={() => setIsClicked(true)} className=\"nav-link\">Home</Nav.Link>\n//               )}\n\n//               {isOnAboutPage === false ? (<Nav.Link to=\"/about\" as={Link} onClick={handleAboutClick} className=\"navLink2\">About</Nav.Link>) : (\n//                 <Nav.Link to=\"/about\" as={Link} onClick={() => isOnAboutPage(true)} className=\"nav-link\" >About</Nav.Link>\n//               )}\n\n//               {isOnContactPage === false ? (<Nav.Link to=\"/contact\" as={Link} onClick={handleContactClick} className=\"navLink3\">Contact Me</Nav.Link>) : (\n//                 <Nav.Link to=\"/contact\" as={Link} onClick={() => setIsOnContactPage(true)} className=\"nav-link\">Contact Me</Nav.Link>\n//               )}\n\n//               {/* {isOnProjects === false ? (<Nav.Link to=\"/projects\" as={Link} onClick={handleProjectsClick} className=\"navLink4\">My Projects</Nav.Link>) : (\n//                 <Nav.Link to=\"/projects\" as={Link} onClick={() => isOnProjects(true)} className=\"nav-link\">My Projects</Nav.Link>\n//               )} */}\n\n//               </Offcanvas.Body>\n\n//           </Container>\n\n//         </Navbar>\n//       ))}\n\n//     </>\n//   )\n// }\n\n// export default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Link","Container","Navbar","Offcanvas","Nav","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","isClicked","setIsClicked","isOnAboutPage","setIsOnAboutPage","isOnContactPage","setIsOnContactPage","isOnProjects","setIsOnProjects","location","pathname","children","map","expand","className","fluid","Brand","style","textTransform","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","id","placement","closeButton","Title","Text","Body","to","as","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Students/my-portfolio/src/Components/Navbar.js"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n  //function for 'home' button only\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  //function for 'About' button only\r\n  const [isOnAboutPage, setIsOnAboutPage] = useState(false);\r\n\r\n  //function for 'contact' button only\r\n  const [isOnContactPage, setIsOnContactPage] = useState(false);\r\n\r\n  //function for 'myProjects'\r\n  const [isOnProjects, setIsOnProjects] = useState(false);\r\n\r\n  //Allows the server to read what page is active\r\n  const location = useLocation();\r\n\r\n  \r\n// || location.pathname === \"/projects\" || location.pathname === \"/about\" || location.pathname === \"/contact\"\r\n  useEffect(() => {\r\n    setIsClicked(location.pathname === '/home');\r\n    setIsOnAboutPage(location.pathname === '/about');\r\n    setIsOnContactPage(location.pathname === '/contact');\r\n    setIsOnProjects(location.pathname === '/projects');\r\n  }, [location.pathname]);\r\n\r\n  if(isClicked === true && location.pathname === isClicked){\r\n    setIsOnAboutPage(false);\r\n    setIsOnContactPage(false);\r\n    setIsOnProjects(false);\r\n  }\r\n\r\n  if(isOnAboutPage === true && location.pathname === isOnAboutPage){\r\n    setIsClicked(false);\r\n    setIsOnContactPage(false);\r\n    setIsOnProjects(false);\r\n  }\r\n\r\n  if(isOnContactPage === true && location.pathname === isOnContactPage){\r\n    setIsClicked(false);\r\n    setIsOnAboutPage(false);\r\n    setIsOnProjects(false);\r\n  }\r\n\r\n  if (isOnProjects === true && location.pathname === isOnProjects){\r\n    isClicked(true);\r\n    setIsOnAboutPage(false);\r\n    setIsOnContactPage(false);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n\r\n     {[false].map((expand) => (\r\n        <Navbar key={expand} expand={expand} className=\"transparent-nav\">\r\n          <Container fluid>\r\n            \r\n\r\n            <Navbar.Brand className=\"Logo-txt\" style={{textTransform:'uppercase'}}>Brandon's Portfolio</Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-${expand}`} className=\"navBlock\" />\r\n            \r\n            <Navbar.Offcanvas\r\n              id={`offcanvasNavbar-expand-${expand}`}\r\n              aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`}\r\n              placement=\"end\"\r\n              className=\"offCanvas-expand\"\r\n            >\r\n\r\n              <Offcanvas.Header closeButton className=\"Offcanvas-header\">\r\n\r\n                <Offcanvas.Title id={`offcanvasNavbarLabel-expand-${expand}`}>\r\n\r\n                  <Navbar.Text style={{textTransform:\"uppercase\"}}>\r\n\r\n                    <div className=\"nav-head-txt\">\r\n                      More about me\r\n                    </div>\r\n\r\n                    </Navbar.Text>\r\n\r\n                </Offcanvas.Title>\r\n\r\n              </Offcanvas.Header>\r\n\r\n              <Offcanvas.Body className=\"Off-canvas-body\">\r\n              <Nav.Link to=\"/\" as={Link} className=\"navLink\">Home</Nav.Link>\r\n              <Nav.Link to=\"/about\" as={Link} className=\"navLink\" >About</Nav.Link>\r\n              <Nav.Link to=\"/projects\" as={Link} className=\"navLink\">My Projects</Nav.Link>\r\n              </Offcanvas.Body>\r\n\r\n            </Navbar.Offcanvas>\r\n      \r\n              <Offcanvas.Body className=\"Off-canvas-body-nav\">\r\n\r\n              {isClicked === false ? (<Nav.Link to=\"/\" as={Link} onClick={() => setIsClicked(true)} className=\"nav-link1\">Home</Nav.Link>) : (\r\n                <Nav.Link to=\"/\" as={Link} onClick={() => setIsClicked(true)} className=\"nav-link\">Home</Nav.Link>\r\n              )}\r\n\r\n              {isOnAboutPage === false ? (<Nav.Link to=\"/about\" as={Link} onClick={() => setIsOnAboutPage(true)} className=\"nav-link2\" >About</Nav.Link>) : (\r\n                <Nav.Link to=\"/about\" as={Link} onClick={() => isOnAboutPage(true)} className=\"nav-link\" >About</Nav.Link>\r\n              )}\r\n\r\n              {isOnContactPage === false ? (<Nav.Link to=\"/contact\" as={Link} onClick={() => isOnContactPage(true)} className=\"nav-link3\">Contact Me</Nav.Link>) : (\r\n                <Nav.Link to=\"/contact\" as={Link} onClick={() => setIsOnContactPage(true)} className=\"nav-link\">Contact Me</Nav.Link>\r\n              )}\r\n\r\n              {/* {isOnProjects === false ? (<Nav.Link to=\"/projects\" as={Link} onClick={() => isOnProjects(true)} className=\"nav-link4\">My Projects</Nav.Link>) : (\r\n                <Nav.Link to=\"/projects\" as={Link} onClick={() => isOnProjects(true)} className=\"nav-link\">My Projects</Nav.Link>\r\n              )} */}\r\n\r\n              </Offcanvas.Body>\r\n\r\n          </Container>\r\n\r\n        </Navbar>\r\n      ))}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n\r\n// import { Link } from 'react-router-dom';\r\n// import Container from 'react-bootstrap/Container';\r\n// import Navbar from 'react-bootstrap/Navbar';\r\n// import Offcanvas from 'react-bootstrap/Offcanvas';\r\n// import Nav from 'react-bootstrap/Nav';\r\n// import { useState, useEffect } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\n\r\n// const Header = () => {\r\n//   //function for 'home' button only\r\n//   // const [isClicked, setIsClicked] = useState(false);\r\n\r\n//   // //function for 'About' button only\r\n//   // const [isOnAboutPage, setIsOnAboutPage] = useState(false);\r\n\r\n//   // //function for 'contact' button only\r\n//   // const [isOnContactPage, setIsOnContactPage] = useState(false);\r\n\r\n//   // //function for 'myProjects'\r\n//   // const [isOnProjects, setIsOnProjects] = useState(false);\r\n\r\n//   // //Allows the server to read what page is active\r\n//   // const location = useLocation();\r\n\r\n  \r\n// // || location.pathname === \"/projects\" || location.pathname === \"/about\" || location.pathname === \"/contact\"\r\n//   // useEffect(() => {\r\n//   //   setIsClicked(location.pathname === '/home');\r\n//   //   setIsOnAboutPage(location.pathname === '/about');\r\n//   //   setIsOnContactPage(location.pathname === '/contact');\r\n//   //   setIsOnProjects(location.pathname === '/projects');\r\n//   // }, [location.pathname]);\r\n\r\n//   // if(isClicked === true && location.pathname === isClicked){\r\n//   //   setIsOnAboutPage(false);\r\n//   //   setIsOnContactPage(false);\r\n//   //   setIsOnProjects(false);\r\n//   // }\r\n\r\n//   // if(isOnAboutPage === true && location.pathname === isOnAboutPage){\r\n//   //   setIsClicked(false);\r\n//   //   setIsOnContactPage(false);\r\n//   //   setIsOnProjects(false);\r\n//   // }\r\n\r\n//   // if(isOnContactPage === true && location.pathname === isOnContactPage){\r\n//   //   setIsClicked(false);\r\n//   //   setIsOnAboutPage(false);\r\n//   //   setIsOnProjects(false);\r\n//   // }\r\n\r\n//   // if (isOnProjects === true && location.pathname === isOnProjects){\r\n//   //   isClicked(true);\r\n//   //   setIsOnAboutPage(false);\r\n//   //   setIsOnContactPage(false);\r\n//   // }\r\n\r\n//   const location = useLocation();\r\n\r\n//   const [isClicked, setIsClicked] = useState(false);\r\n//   const [isOnAboutPage, setIsOnAboutPage] = useState(location.pathname === '/about');\r\n//   const [isOnContactPage, setIsOnContactPage] = useState(location.pathname === '/contact');\r\n//   const [isOnProjects, setIsOnProjects] = useState(location.pathname === '/projects');\r\n\r\n//   const handleHomeClick = () => {\r\n//     setIsClicked(true);\r\n//     setIsOnAboutPage(false);\r\n//     setIsOnContactPage(false);\r\n//     setIsOnProjects(false);\r\n//   };\r\n\r\n//   const handleAboutClick = () => {\r\n//     setIsOnAboutPage(true);\r\n//     setIsClicked(false);\r\n//     setIsOnContactPage(false);\r\n//     setIsOnProjects(false);\r\n//   };\r\n\r\n//   const handleContactClick = () => {\r\n//     setIsOnContactPage(true);\r\n//     setIsClicked(false);\r\n//     setIsOnAboutPage(false);\r\n//     setIsOnProjects(false);\r\n//   };\r\n\r\n//   const handleProjectsClick = () => {\r\n//     setIsOnProjects(true);\r\n//     setIsClicked(false);\r\n//     setIsOnAboutPage(false);\r\n//     setIsOnContactPage(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     setIsClicked(location.pathname === '/home');\r\n//     setIsOnAboutPage(location.pathname === '/about');\r\n//     setIsOnContactPage(location.pathname === '/contact');\r\n//     setIsOnProjects(location.pathname === '/projects');\r\n//   }, [location.pathname]);\r\n\r\n\r\n  \r\n//   return (\r\n//     <>\r\n\r\n//      {[false].map((expand) => (\r\n//         <Navbar key={expand} expand={expand} className=\"transparent-nav\">\r\n          \r\n//           <Container fluid>\r\n            \r\n\r\n//             <Navbar.Brand className=\"Logo-txt\" style={{textTransform:'uppercase'}}>Brandon's Portfolio</Navbar.Brand>\r\n\r\n//             <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-${expand}`} className=\"navBlock\" />\r\n\r\n//             <Navbar.Offcanvas\r\n//               id={`offcanvasNavbar-expand-${expand}`}\r\n//               aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`}\r\n//               placement=\"end\"\r\n//               className=\"offCanvas-expand\"\r\n//             >\r\n\r\n//               <Offcanvas.Header closeButton className=\"Offcanvas-header\">\r\n\r\n//                 <Offcanvas.Title id={`offcanvasNavbarLabel-expand-${expand}`}>\r\n\r\n//                   <Navbar.Text style={{textTransform:\"uppercase\"}}>\r\n\r\n//                     <div className=\"nav-head-txt\">\r\n//                       More about me\r\n//                     </div>\r\n\r\n//                     </Navbar.Text>\r\n\r\n//                 </Offcanvas.Title>\r\n\r\n//               </Offcanvas.Header>\r\n\r\n//               <Offcanvas.Body className=\"Off-canvas-body\">\r\n//               <Nav.Link to=\"/\" as={Link} className=\"navLink\">Home</Nav.Link>\r\n//               <Nav.Link to=\"/about\" as={Link} className=\"navLink\" >About</Nav.Link>\r\n//               <Nav.Link to=\"/projects\" as={Link} className=\"navLink\">My Projects</Nav.Link>\r\n//               </Offcanvas.Body>\r\n\r\n//             </Navbar.Offcanvas>\r\n      \r\n//               <Offcanvas.Body className=\"Off-canvas-body-nav\">\r\n\r\n//               {isClicked === false ? ( <Nav.Link to=\"/\" as={Link} onClick={setIsClicked(true)} onChange={handleHomeClick} className=\"navLink1\">Home</Nav.Link>) : (\r\n//                 <Nav.Link to=\"/\" as={Link} onClick={() => setIsClicked(true)} className=\"nav-link\">Home</Nav.Link>\r\n//               )}\r\n\r\n//               {isOnAboutPage === false ? (<Nav.Link to=\"/about\" as={Link} onClick={handleAboutClick} className=\"navLink2\">About</Nav.Link>) : (\r\n//                 <Nav.Link to=\"/about\" as={Link} onClick={() => isOnAboutPage(true)} className=\"nav-link\" >About</Nav.Link>\r\n//               )}\r\n\r\n//               {isOnContactPage === false ? (<Nav.Link to=\"/contact\" as={Link} onClick={handleContactClick} className=\"navLink3\">Contact Me</Nav.Link>) : (\r\n//                 <Nav.Link to=\"/contact\" as={Link} onClick={() => setIsOnContactPage(true)} className=\"nav-link\">Contact Me</Nav.Link>\r\n//               )}\r\n\r\n//               {/* {isOnProjects === false ? (<Nav.Link to=\"/projects\" as={Link} onClick={handleProjectsClick} className=\"navLink4\">My Projects</Nav.Link>) : (\r\n//                 <Nav.Link to=\"/projects\" as={Link} onClick={() => isOnProjects(true)} className=\"nav-link\">My Projects</Nav.Link>\r\n//               )} */}\r\n\r\n//               </Offcanvas.Body>\r\n\r\n//           </Container>\r\n\r\n//         </Navbar>\r\n//       ))}\r\n\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Header;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}