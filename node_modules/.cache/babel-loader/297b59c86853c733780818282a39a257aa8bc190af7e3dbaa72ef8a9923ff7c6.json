{"ast":null,"code":"// import { Link } from 'react-router-dom';\n// import Container from 'react-bootstrap/Container';\n// import Navbar from 'react-bootstrap/Navbar';\n// import Offcanvas from 'react-bootstrap/Offcanvas';\n// import Nav from 'react-bootstrap/Nav';\n// import { useState, useEffect } from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const Header = () => {\n//   //function for 'home' button only\n//   const [isClicked, setIsClicked] = useState(false);\n\n//   //function for 'About' button only\n//   const [isOnAboutPage, setIsOnAboutPage] = useState(false);\n\n//   //function for 'contact' button only\n//   const [isOnContactPage, setIsOnContactPage] = useState(false);\n\n//   //function for 'myProjects'\n//   const [isOnProjects, setIsOnProjects] = useState(false);\n\n//   //Allows the server to read what page is active\n//   const location = useLocation();\n\n// // || location.pathname === \"/projects\" || location.pathname === \"/about\" || location.pathname === \"/contact\"\n//   useEffect(() => {\n//     setIsClicked(location.pathname === '/home');\n//     setIsOnAboutPage(location.pathname === '/about');\n//     setIsOnContactPage(location.pathname === '/contact');\n//     setIsOnProjects(location.pathname === '/projects');\n//   }, [location.pathname]);\n\n//   if(isClicked === true && location.pathname === isClicked){\n//     setIsOnAboutPage(false);\n//     setIsOnContactPage(false);\n//     setIsOnProjects(false);\n//   }\n\n//   if(isOnAboutPage === true && location.pathname === isOnAboutPage){\n//     setIsClicked(false);\n//     setIsOnContactPage(false);\n//     setIsOnProjects(false);\n//   }\n\n//   if(isOnContactPage === true && location.pathname === isOnContactPage){\n//     setIsClicked(false);\n//     setIsOnAboutPage(false);\n//     setIsOnProjects(false);\n//   }\n\n//   if (isOnProjects === true && location.pathname === isOnProjects){\n//     isClicked(true);\n//     setIsOnAboutPage(false);\n//     setIsOnContactPage(false);\n//   }\n\n//   return (\n//     <>\n\n//      {[false].map((expand) => (\n//         <Navbar key={expand} expand={expand} className=\"transparent-nav\">\n//           <Container fluid>\n\n//             <Navbar.Brand className=\"Logo-txt\" style={{textTransform:'uppercase'}}>Brandon's Portfolio</Navbar.Brand>\n\n//             <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-${expand}`} className=\"navBlock\" />\n\n//             <Navbar.Offcanvas\n//               id={`offcanvasNavbar-expand-${expand}`}\n//               aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`}\n//               placement=\"end\"\n//               className=\"offCanvas-expand\"\n//             >\n\n//               <Offcanvas.Header closeButton className=\"Offcanvas-header\">\n\n//                 <Offcanvas.Title id={`offcanvasNavbarLabel-expand-${expand}`}>\n\n//                   <Navbar.Text style={{textTransform:\"uppercase\"}}>\n\n//                     <div className=\"nav-head-txt\">\n//                       More about me\n//                     </div>\n\n//                     </Navbar.Text>\n\n//                 </Offcanvas.Title>\n\n//               </Offcanvas.Header>\n\n//               <Offcanvas.Body className=\"Off-canvas-body\">\n//               <Nav.Link to=\"/\" as={Link} className=\"navLink\">Home</Nav.Link>\n//               <Nav.Link to=\"/about\" as={Link} className=\"navLink\" >About</Nav.Link>\n//               <Nav.Link to=\"/projects\" as={Link} className=\"navLink\">My Projects</Nav.Link>\n//               </Offcanvas.Body>\n\n//             </Navbar.Offcanvas>\n\n//               <Offcanvas.Body className=\"Off-canvas-body-nav\">\n\n//               {isClicked === false ? (<Nav.Link to=\"/\" as={Link} onClick={() => setIsClicked(true)} className=\"nav-link1\">Home</Nav.Link>) : (\n//                 <Nav.Link to=\"/\" as={Link} onClick={() => setIsClicked(true)} className=\"nav-link\">Home</Nav.Link>\n//               )}\n\n//               {isOnAboutPage === false ? (<Nav.Link to=\"/about\" as={Link} onClick={() => setIsOnAboutPage(true)} className=\"nav-link2\" >About</Nav.Link>) : (\n//                 <Nav.Link to=\"/about\" as={Link} onClick={() => isOnAboutPage(true)} className=\"nav-link\" >About</Nav.Link>\n//               )}\n\n//               {isOnContactPage === false ? (<Nav.Link to=\"/contact\" as={Link} onClick={() => isOnContactPage(true)} className=\"nav-link3\">Contact Me</Nav.Link>) : (\n//                 <Nav.Link to=\"/contact\" as={Link} onClick={() => setIsOnContactPage(true)} className=\"nav-link\">Contact Me</Nav.Link>\n//               )}\n\n//               {isOnProjects === false ? (<Nav.Link to=\"/projects\" as={Link} onClick={() => isOnProjects(true)} className=\"nav-link4\">My Projects</Nav.Link>) : (\n//                 <Nav.Link to=\"/projects\" as={Link} onClick={() => isOnProjects(true)} className=\"nav-link\">My Projects</Nav.Link>\n//               )}\n\n//               </Offcanvas.Body>\n\n//           </Container>\n\n//         </Navbar>\n//       ))}\n\n//     </>\n//   )\n// }\n\n// export default Header;\n\n// import { Link } from 'react-router-dom';\n// import Container from 'react-bootstrap/Container';\n// import Navbar from 'react-bootstrap/Navbar';\n// import Offcanvas from 'react-bootstrap/Offcanvas';\n// import Nav from 'react-bootstrap/Nav';\n// import { useState, useEffect } from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const Header = () => {\n//   //function for 'home' button only\n//   // const [isClicked, setIsClicked] = useState(false);\n\n//   // //function for 'About' button only\n//   // const [isOnAboutPage, setIsOnAboutPage] = useState(false);\n\n//   // //function for 'contact' button only\n//   // const [isOnContactPage, setIsOnContactPage] = useState(false);\n\n//   // //function for 'myProjects'\n//   // const [isOnProjects, setIsOnProjects] = useState(false);\n\n//   // //Allows the server to read what page is active\n//   // const location = useLocation();\n\n// // || location.pathname === \"/projects\" || location.pathname === \"/about\" || location.pathname === \"/contact\"\n//   // useEffect(() => {\n//   //   setIsClicked(location.pathname === '/home');\n//   //   setIsOnAboutPage(location.pathname === '/about');\n//   //   setIsOnContactPage(location.pathname === '/contact');\n//   //   setIsOnProjects(location.pathname === '/projects');\n//   // }, [location.pathname]);\n\n//   // if(isClicked === true && location.pathname === isClicked){\n//   //   setIsOnAboutPage(false);\n//   //   setIsOnContactPage(false);\n//   //   setIsOnProjects(false);\n//   // }\n\n//   // if(isOnAboutPage === true && location.pathname === isOnAboutPage){\n//   //   setIsClicked(false);\n//   //   setIsOnContactPage(false);\n//   //   setIsOnProjects(false);\n//   // }\n\n//   // if(isOnContactPage === true && location.pathname === isOnContactPage){\n//   //   setIsClicked(false);\n//   //   setIsOnAboutPage(false);\n//   //   setIsOnProjects(false);\n//   // }\n\n//   // if (isOnProjects === true && location.pathname === isOnProjects){\n//   //   isClicked(true);\n//   //   setIsOnAboutPage(false);\n//   //   setIsOnContactPage(false);\n//   // }\n\n//   const location = useLocation();\n\n//   const [isClicked, setIsClicked] = useState(false);\n//   const [isOnAboutPage, setIsOnAboutPage] = useState(location.pathname === '/about');\n//   const [isOnContactPage, setIsOnContactPage] = useState(location.pathname === '/contact');\n//   const [isOnProjects, setIsOnProjects] = useState(location.pathname === '/projects');\n\n//   const handleHomeClick = () => {\n//     setIsClicked(true);\n//     setIsOnAboutPage(false);\n//     setIsOnContactPage(false);\n//     setIsOnProjects(false);\n//   };\n\n//   const handleAboutClick = () => {\n//     setIsOnAboutPage(true);\n//     setIsClicked(false);\n//     setIsOnContactPage(false);\n//     setIsOnProjects(false);\n//   };\n\n//   const handleContactClick = () => {\n//     setIsOnContactPage(true);\n//     setIsClicked(false);\n//     setIsOnAboutPage(false);\n//     setIsOnProjects(false);\n//   };\n\n//   const handleProjectsClick = () => {\n//     setIsOnProjects(true);\n//     setIsClicked(false);\n//     setIsOnAboutPage(false);\n//     setIsOnContactPage(false);\n//   };\n\n//   useEffect(() => {\n//     setIsClicked(location.pathname === '/home');\n//     setIsOnAboutPage(location.pathname === '/about');\n//     setIsOnContactPage(location.pathname === '/contact');\n//     setIsOnProjects(location.pathname === '/projects');\n//   }, [location.pathname]);\n\n//   return (\n//     <>\n\n//      {[false].map((expand) => (\n//         <Navbar key={expand} expand={expand} className=\"transparent-nav\">\n\n//           <Container fluid>\n\n//             <Navbar.Brand className=\"Logo-txt\" style={{textTransform:'uppercase'}}>Brandon's Portfolio</Navbar.Brand>\n\n//             <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-${expand}`} className=\"navBlock\" />\n\n//             <Navbar.Offcanvas\n//               id={`offcanvasNavbar-expand-${expand}`}\n//               aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`}\n//               placement=\"end\"\n//               className=\"offCanvas-expand\"\n//             >\n\n//               <Offcanvas.Header closeButton className=\"Offcanvas-header\">\n\n//                 <Offcanvas.Title id={`offcanvasNavbarLabel-expand-${expand}`}>\n\n//                   <Navbar.Text style={{textTransform:\"uppercase\"}}>\n\n//                     <div className=\"nav-head-txt\">\n//                       More about me\n//                     </div>\n\n//                     </Navbar.Text>\n\n//                 </Offcanvas.Title>\n\n//               </Offcanvas.Header>\n\n//               <Offcanvas.Body className=\"Off-canvas-body\">\n//               <Nav.Link to=\"/\" as={Link} className=\"navLink\">Home</Nav.Link>\n//               <Nav.Link to=\"/about\" as={Link} className=\"navLink\" >About</Nav.Link>\n//               <Nav.Link to=\"/projects\" as={Link} className=\"navLink\">My Projects</Nav.Link>\n//               </Offcanvas.Body>\n\n//             </Navbar.Offcanvas>\n\n//               <Offcanvas.Body className=\"Off-canvas-body-nav\">\n\n//               {isClicked === false ? ( <Nav.Link to=\"/\" as={Link} onClick={setIsClicked(true)} onChange={handleHomeClick} className=\"navLink1\">Home</Nav.Link>) : (\n//                 <Nav.Link to=\"/\" as={Link} onClick={() => setIsClicked(true)} className=\"nav-link\">Home</Nav.Link>\n//               )}\n\n//               {isOnAboutPage === false ? (<Nav.Link to=\"/about\" as={Link} onClick={handleAboutClick} className=\"navLink2\">About</Nav.Link>) : (\n//                 <Nav.Link to=\"/about\" as={Link} onClick={() => isOnAboutPage(true)} className=\"nav-link\" >About</Nav.Link>\n//               )}\n\n//               {isOnContactPage === false ? (<Nav.Link to=\"/contact\" as={Link} onClick={handleContactClick} className=\"navLink3\">Contact Me</Nav.Link>) : (\n//                 <Nav.Link to=\"/contact\" as={Link} onClick={() => setIsOnContactPage(true)} className=\"nav-link\">Contact Me</Nav.Link>\n//               )}\n\n//               {/* {isOnProjects === false ? (<Nav.Link to=\"/projects\" as={Link} onClick={handleProjectsClick} className=\"navLink4\">My Projects</Nav.Link>) : (\n//                 <Nav.Link to=\"/projects\" as={Link} onClick={() => isOnProjects(true)} className=\"nav-link\">My Projects</Nav.Link>\n//               )} */}\n\n//               </Offcanvas.Body>\n\n//           </Container>\n\n//         </Navbar>\n//       ))}\n\n//     </>\n//   )\n// }\n\n// export default Header;","map":{"version":3,"names":[],"sources":["C:/Users/Students/my-portfolio/src/Components/Navbar.js"],"sourcesContent":["// import { Link } from 'react-router-dom';\r\n// import Container from 'react-bootstrap/Container';\r\n// import Navbar from 'react-bootstrap/Navbar';\r\n// import Offcanvas from 'react-bootstrap/Offcanvas';\r\n// import Nav from 'react-bootstrap/Nav';\r\n// import { useState, useEffect } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\n\r\n// const Header = () => {\r\n//   //function for 'home' button only\r\n//   const [isClicked, setIsClicked] = useState(false);\r\n\r\n//   //function for 'About' button only\r\n//   const [isOnAboutPage, setIsOnAboutPage] = useState(false);\r\n\r\n//   //function for 'contact' button only\r\n//   const [isOnContactPage, setIsOnContactPage] = useState(false);\r\n\r\n//   //function for 'myProjects'\r\n//   const [isOnProjects, setIsOnProjects] = useState(false);\r\n\r\n//   //Allows the server to read what page is active\r\n//   const location = useLocation();\r\n\r\n  \r\n// // || location.pathname === \"/projects\" || location.pathname === \"/about\" || location.pathname === \"/contact\"\r\n//   useEffect(() => {\r\n//     setIsClicked(location.pathname === '/home');\r\n//     setIsOnAboutPage(location.pathname === '/about');\r\n//     setIsOnContactPage(location.pathname === '/contact');\r\n//     setIsOnProjects(location.pathname === '/projects');\r\n//   }, [location.pathname]);\r\n\r\n//   if(isClicked === true && location.pathname === isClicked){\r\n//     setIsOnAboutPage(false);\r\n//     setIsOnContactPage(false);\r\n//     setIsOnProjects(false);\r\n//   }\r\n\r\n//   if(isOnAboutPage === true && location.pathname === isOnAboutPage){\r\n//     setIsClicked(false);\r\n//     setIsOnContactPage(false);\r\n//     setIsOnProjects(false);\r\n//   }\r\n\r\n//   if(isOnContactPage === true && location.pathname === isOnContactPage){\r\n//     setIsClicked(false);\r\n//     setIsOnAboutPage(false);\r\n//     setIsOnProjects(false);\r\n//   }\r\n\r\n//   if (isOnProjects === true && location.pathname === isOnProjects){\r\n//     isClicked(true);\r\n//     setIsOnAboutPage(false);\r\n//     setIsOnContactPage(false);\r\n//   }\r\n  \r\n//   return (\r\n//     <>\r\n\r\n//      {[false].map((expand) => (\r\n//         <Navbar key={expand} expand={expand} className=\"transparent-nav\">\r\n//           <Container fluid>\r\n            \r\n\r\n//             <Navbar.Brand className=\"Logo-txt\" style={{textTransform:'uppercase'}}>Brandon's Portfolio</Navbar.Brand>\r\n\r\n//             <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-${expand}`} className=\"navBlock\" />\r\n            \r\n//             <Navbar.Offcanvas\r\n//               id={`offcanvasNavbar-expand-${expand}`}\r\n//               aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`}\r\n//               placement=\"end\"\r\n//               className=\"offCanvas-expand\"\r\n//             >\r\n\r\n//               <Offcanvas.Header closeButton className=\"Offcanvas-header\">\r\n\r\n//                 <Offcanvas.Title id={`offcanvasNavbarLabel-expand-${expand}`}>\r\n\r\n//                   <Navbar.Text style={{textTransform:\"uppercase\"}}>\r\n\r\n//                     <div className=\"nav-head-txt\">\r\n//                       More about me\r\n//                     </div>\r\n\r\n//                     </Navbar.Text>\r\n\r\n//                 </Offcanvas.Title>\r\n\r\n//               </Offcanvas.Header>\r\n\r\n//               <Offcanvas.Body className=\"Off-canvas-body\">\r\n//               <Nav.Link to=\"/\" as={Link} className=\"navLink\">Home</Nav.Link>\r\n//               <Nav.Link to=\"/about\" as={Link} className=\"navLink\" >About</Nav.Link>\r\n//               <Nav.Link to=\"/projects\" as={Link} className=\"navLink\">My Projects</Nav.Link>\r\n//               </Offcanvas.Body>\r\n\r\n//             </Navbar.Offcanvas>\r\n      \r\n//               <Offcanvas.Body className=\"Off-canvas-body-nav\">\r\n\r\n//               {isClicked === false ? (<Nav.Link to=\"/\" as={Link} onClick={() => setIsClicked(true)} className=\"nav-link1\">Home</Nav.Link>) : (\r\n//                 <Nav.Link to=\"/\" as={Link} onClick={() => setIsClicked(true)} className=\"nav-link\">Home</Nav.Link>\r\n//               )}\r\n\r\n//               {isOnAboutPage === false ? (<Nav.Link to=\"/about\" as={Link} onClick={() => setIsOnAboutPage(true)} className=\"nav-link2\" >About</Nav.Link>) : (\r\n//                 <Nav.Link to=\"/about\" as={Link} onClick={() => isOnAboutPage(true)} className=\"nav-link\" >About</Nav.Link>\r\n//               )}\r\n\r\n//               {isOnContactPage === false ? (<Nav.Link to=\"/contact\" as={Link} onClick={() => isOnContactPage(true)} className=\"nav-link3\">Contact Me</Nav.Link>) : (\r\n//                 <Nav.Link to=\"/contact\" as={Link} onClick={() => setIsOnContactPage(true)} className=\"nav-link\">Contact Me</Nav.Link>\r\n//               )}\r\n\r\n//               {isOnProjects === false ? (<Nav.Link to=\"/projects\" as={Link} onClick={() => isOnProjects(true)} className=\"nav-link4\">My Projects</Nav.Link>) : (\r\n//                 <Nav.Link to=\"/projects\" as={Link} onClick={() => isOnProjects(true)} className=\"nav-link\">My Projects</Nav.Link>\r\n//               )}\r\n\r\n//               </Offcanvas.Body>\r\n\r\n//           </Container>\r\n\r\n//         </Navbar>\r\n//       ))}\r\n\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Header;\r\n\r\n// import { Link } from 'react-router-dom';\r\n// import Container from 'react-bootstrap/Container';\r\n// import Navbar from 'react-bootstrap/Navbar';\r\n// import Offcanvas from 'react-bootstrap/Offcanvas';\r\n// import Nav from 'react-bootstrap/Nav';\r\n// import { useState, useEffect } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\n\r\n// const Header = () => {\r\n//   //function for 'home' button only\r\n//   // const [isClicked, setIsClicked] = useState(false);\r\n\r\n//   // //function for 'About' button only\r\n//   // const [isOnAboutPage, setIsOnAboutPage] = useState(false);\r\n\r\n//   // //function for 'contact' button only\r\n//   // const [isOnContactPage, setIsOnContactPage] = useState(false);\r\n\r\n//   // //function for 'myProjects'\r\n//   // const [isOnProjects, setIsOnProjects] = useState(false);\r\n\r\n//   // //Allows the server to read what page is active\r\n//   // const location = useLocation();\r\n\r\n  \r\n// // || location.pathname === \"/projects\" || location.pathname === \"/about\" || location.pathname === \"/contact\"\r\n//   // useEffect(() => {\r\n//   //   setIsClicked(location.pathname === '/home');\r\n//   //   setIsOnAboutPage(location.pathname === '/about');\r\n//   //   setIsOnContactPage(location.pathname === '/contact');\r\n//   //   setIsOnProjects(location.pathname === '/projects');\r\n//   // }, [location.pathname]);\r\n\r\n//   // if(isClicked === true && location.pathname === isClicked){\r\n//   //   setIsOnAboutPage(false);\r\n//   //   setIsOnContactPage(false);\r\n//   //   setIsOnProjects(false);\r\n//   // }\r\n\r\n//   // if(isOnAboutPage === true && location.pathname === isOnAboutPage){\r\n//   //   setIsClicked(false);\r\n//   //   setIsOnContactPage(false);\r\n//   //   setIsOnProjects(false);\r\n//   // }\r\n\r\n//   // if(isOnContactPage === true && location.pathname === isOnContactPage){\r\n//   //   setIsClicked(false);\r\n//   //   setIsOnAboutPage(false);\r\n//   //   setIsOnProjects(false);\r\n//   // }\r\n\r\n//   // if (isOnProjects === true && location.pathname === isOnProjects){\r\n//   //   isClicked(true);\r\n//   //   setIsOnAboutPage(false);\r\n//   //   setIsOnContactPage(false);\r\n//   // }\r\n\r\n//   const location = useLocation();\r\n\r\n//   const [isClicked, setIsClicked] = useState(false);\r\n//   const [isOnAboutPage, setIsOnAboutPage] = useState(location.pathname === '/about');\r\n//   const [isOnContactPage, setIsOnContactPage] = useState(location.pathname === '/contact');\r\n//   const [isOnProjects, setIsOnProjects] = useState(location.pathname === '/projects');\r\n\r\n//   const handleHomeClick = () => {\r\n//     setIsClicked(true);\r\n//     setIsOnAboutPage(false);\r\n//     setIsOnContactPage(false);\r\n//     setIsOnProjects(false);\r\n//   };\r\n\r\n//   const handleAboutClick = () => {\r\n//     setIsOnAboutPage(true);\r\n//     setIsClicked(false);\r\n//     setIsOnContactPage(false);\r\n//     setIsOnProjects(false);\r\n//   };\r\n\r\n//   const handleContactClick = () => {\r\n//     setIsOnContactPage(true);\r\n//     setIsClicked(false);\r\n//     setIsOnAboutPage(false);\r\n//     setIsOnProjects(false);\r\n//   };\r\n\r\n//   const handleProjectsClick = () => {\r\n//     setIsOnProjects(true);\r\n//     setIsClicked(false);\r\n//     setIsOnAboutPage(false);\r\n//     setIsOnContactPage(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     setIsClicked(location.pathname === '/home');\r\n//     setIsOnAboutPage(location.pathname === '/about');\r\n//     setIsOnContactPage(location.pathname === '/contact');\r\n//     setIsOnProjects(location.pathname === '/projects');\r\n//   }, [location.pathname]);\r\n\r\n\r\n  \r\n//   return (\r\n//     <>\r\n\r\n//      {[false].map((expand) => (\r\n//         <Navbar key={expand} expand={expand} className=\"transparent-nav\">\r\n          \r\n//           <Container fluid>\r\n            \r\n\r\n//             <Navbar.Brand className=\"Logo-txt\" style={{textTransform:'uppercase'}}>Brandon's Portfolio</Navbar.Brand>\r\n\r\n//             <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-${expand}`} className=\"navBlock\" />\r\n\r\n//             <Navbar.Offcanvas\r\n//               id={`offcanvasNavbar-expand-${expand}`}\r\n//               aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`}\r\n//               placement=\"end\"\r\n//               className=\"offCanvas-expand\"\r\n//             >\r\n\r\n//               <Offcanvas.Header closeButton className=\"Offcanvas-header\">\r\n\r\n//                 <Offcanvas.Title id={`offcanvasNavbarLabel-expand-${expand}`}>\r\n\r\n//                   <Navbar.Text style={{textTransform:\"uppercase\"}}>\r\n\r\n//                     <div className=\"nav-head-txt\">\r\n//                       More about me\r\n//                     </div>\r\n\r\n//                     </Navbar.Text>\r\n\r\n//                 </Offcanvas.Title>\r\n\r\n//               </Offcanvas.Header>\r\n\r\n//               <Offcanvas.Body className=\"Off-canvas-body\">\r\n//               <Nav.Link to=\"/\" as={Link} className=\"navLink\">Home</Nav.Link>\r\n//               <Nav.Link to=\"/about\" as={Link} className=\"navLink\" >About</Nav.Link>\r\n//               <Nav.Link to=\"/projects\" as={Link} className=\"navLink\">My Projects</Nav.Link>\r\n//               </Offcanvas.Body>\r\n\r\n//             </Navbar.Offcanvas>\r\n      \r\n//               <Offcanvas.Body className=\"Off-canvas-body-nav\">\r\n\r\n//               {isClicked === false ? ( <Nav.Link to=\"/\" as={Link} onClick={setIsClicked(true)} onChange={handleHomeClick} className=\"navLink1\">Home</Nav.Link>) : (\r\n//                 <Nav.Link to=\"/\" as={Link} onClick={() => setIsClicked(true)} className=\"nav-link\">Home</Nav.Link>\r\n//               )}\r\n\r\n//               {isOnAboutPage === false ? (<Nav.Link to=\"/about\" as={Link} onClick={handleAboutClick} className=\"navLink2\">About</Nav.Link>) : (\r\n//                 <Nav.Link to=\"/about\" as={Link} onClick={() => isOnAboutPage(true)} className=\"nav-link\" >About</Nav.Link>\r\n//               )}\r\n\r\n//               {isOnContactPage === false ? (<Nav.Link to=\"/contact\" as={Link} onClick={handleContactClick} className=\"navLink3\">Contact Me</Nav.Link>) : (\r\n//                 <Nav.Link to=\"/contact\" as={Link} onClick={() => setIsOnContactPage(true)} className=\"nav-link\">Contact Me</Nav.Link>\r\n//               )}\r\n\r\n//               {/* {isOnProjects === false ? (<Nav.Link to=\"/projects\" as={Link} onClick={handleProjectsClick} className=\"navLink4\">My Projects</Nav.Link>) : (\r\n//                 <Nav.Link to=\"/projects\" as={Link} onClick={() => isOnProjects(true)} className=\"nav-link\">My Projects</Nav.Link>\r\n//               )} */}\r\n\r\n//               </Offcanvas.Body>\r\n\r\n//           </Container>\r\n\r\n//         </Navbar>\r\n//       ))}\r\n\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Header;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;;AAEA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}