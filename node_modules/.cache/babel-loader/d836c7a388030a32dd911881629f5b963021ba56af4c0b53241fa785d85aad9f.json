{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Students\\\\my-portfolio\\\\src\\\\Components\\\\Navbar.js\";\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport Nav from 'react-bootstrap/Nav';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  var _s = $RefreshSig$();\n  function OffCanvasExample({\n    ...props\n  }) {\n    _s();\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleShow,\n        className: \"btn bg-transparent\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n        show: show,\n        onHide: handleClose,\n        ...props,\n        children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n            children: \"Offcanvas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n          children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  _s(OffCanvasExample, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [false].map(expand => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this))\n  }, void 0, false);\n};\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Link","Container","Navbar","Offcanvas","Nav","useState","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","$RefreshSig$","OffCanvasExample","props","show","setShow","handleClose","handleShow","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","onHide","closeButton","Title","Body","map","expand","_c","$RefreshReg$"],"sources":["C:/Users/Students/my-portfolio/src/Components/Navbar.js"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Header = () => {\r\n\r\n\r\n  function OffCanvasExample({ ...props }) {\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n  \r\n    return (\r\n      <>\r\n\r\n            <Button onClick={handleShow} className=\"btn bg-transparent\">Projects</Button>\r\n\r\n        <Offcanvas show={show} onHide={handleClose} {...props}>\r\n          <Offcanvas.Header closeButton>\r\n            <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body>\r\n            Some text as placeholder. In real life you can have the elements you\r\n            have chosen. Like, text, images, lists, etc.\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  \r\n  \r\n  return (\r\n    <>\r\n\r\n     {[false].map((expand) => (\r\n      <div>\r\n        \r\n      </div>\r\n      ))}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAGnB,SAASC,gBAAgBA,CAAC;IAAE,GAAGC;EAAM,CAAC,EAAE;IAAAH,EAAA;IACtC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;IAEvC,MAAMa,WAAW,GAAGA,CAAA,KAAMD,OAAO,CAAC,KAAK,CAAC;IACxC,MAAME,UAAU,GAAGA,CAAA,KAAMF,OAAO,CAAC,IAAI,CAAC;IAEtC,oBACET,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBAEMZ,OAAA,CAACF,MAAM;QAACe,OAAO,EAAEF,UAAW;QAACG,SAAS,EAAC,oBAAoB;QAAAF,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEjFlB,OAAA,CAACL,SAAS;QAACa,IAAI,EAAEA,IAAK;QAACW,MAAM,EAAET,WAAY;QAAA,GAAKH,KAAK;QAAAK,QAAA,gBACnDZ,OAAA,CAACL,SAAS,CAACQ,MAAM;UAACiB,WAAW;UAAAR,QAAA,eAC3BZ,OAAA,CAACL,SAAS,CAAC0B,KAAK;YAAAT,QAAA,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACnBlB,OAAA,CAACL,SAAS,CAAC2B,IAAI;UAAAV,QAAA,EAAC;QAGhB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA,eACZ,CAAC;EAEP;EAACd,EAAA,CAtBQE,gBAAgB;EA0BzB,oBACEN,OAAA,CAAAE,SAAA;IAAAU,QAAA,EAEE,CAAC,KAAK,CAAC,CAACW,GAAG,CAAEC,MAAM,iBACnBxB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CACJ;EAAC,gBAEF,CAAC;AAEP,CAAC;AAAAO,EAAA,GAxCKtB,MAAM;AA0CZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}